- name: Rotate Docker Secrets
  hosts: localhost
  gather_facts: false
  vars:
    checksum_directory: .
    secrets:
      - {name: 'test_1', value: "test_1"}
      - {name: 'test_2', value: "test_2"}

  tasks:
    - name: Ensure checksum directory exists
      file:
        path: "{{ checksum_directory }}"
        state: directory

    - name: Calculate checksums for secrets
      set_fact:
        secret_checksums: "{{ secret_checksums 
          | default({}) 
          | combine({item.name: lookup('pipe', 'echo ' + item.value + ' 
          | md5sum 
          | cut -d\" \" -f1')}) }}"
      loop: "{{ secrets }}"

    - name: Debug secret_checksums
      debug:
        msg: "{{ secret_checksums }}"

    - name: Check if previous checksums file exists
      stat:
        path: "{{ checksum_directory }}/secrets.ini"
      register: previous_checksums_file

    - name: Load previous checksums if file exists
      ini_file:
        path: "{{ checksum_directory }}/secrets.ini"
        state: present
      when: previous_checksums_file.stat.exists
      register: previous_checksums

    - name: Create new secrets if value has changed
      docker_secret:
        name: "{{ item.name }}_{{ secret_checksums[item.name] }}"
        data: "{{ item.value }}"
        state: present
      when: (previous_checksums[item.name] is not defined) or (previous_checksums[item.name] != secret_checksums[item.name])
      loop: "{{ secrets }}"

    - name: Create new secrets if value has changed
      docker_secret:
        name: "{{ item.name }}_{{ secret_checksums[item.name] }}"
        data: "{{ item.value }}"
        state: present
      when: previous_checksums[item.name] != secret_checksums[item.name]
      loop: "{{ secrets }}"
      register: new_secrets

    - name: Update checksums file
      ini_file:
        path: ./secrets.ini
        section: "{{ item.name }}"
        option: checksum
        value: "{{ secret_checksums[item.name] }}"
      loop: "{{ secrets }}"

    - name: Check if Docker Compose update is needed
      set_fact:
        update_needed: "{{ new_secrets.results | selectattr('changed', 'equalto', true) | list | length > 0 }}"

    - name: Optionally, remove old secrets
      docker_secret:
        name: "{{ item }}"
        state: absent
      loop: "{{ previous_checksums.keys() | difference(secret_checksums.keys()) }}"
      ignore_errors: true
