- name: Ensure checksum directory exists
  file:
    path: "{{ checksum_directory }}"
    mode: '0644'
    state: directory

- name: Calculate checksums for configs
  set_fact:
    config_checksums: "{{ config_checksums
      | default({})
      | combine({item.name: lookup('pipe', 'echo ' + item.value + '
      | md5sum
      | cut -d\" \" -f1')}) }}"
  loop: "{{ configs }}"

- name: Check if previous checksums file exists
  stat:
    path: "{{ checksum_directory }}/{{ checksum_file }}"
  register: previous_checksums_file

- name: Load previous checksums if file exists
  set_fact:
    previous_checksums: "{{ previous_checksums
      | default({})
      | combine({
          item.name: lookup(
          'ansible.builtin.ini',
          'checksum',
          section=item.name,
          file=checksum_directory + '{{ checksum_file }}'
          )
        })
      }}"
  loop: "{{ configs }}"
  when: previous_checksums_file.stat.exists

- name: Create new configs if value has changed
  docker_config:
    name: "{{ item.name }}_{{ config_checksums[item.name] }}"
    data: "{{ item.value }}"
    state: present
    labels:
      managed_by: "rotate_docker_configs"
      name: "{{ item.name }}"
  when: (previous_checksums[item.name] is not defined) or (previous_checksums[item.name] != config_checksums[item.name])
  loop: "{{ configs }}"

- name: Update checksums file
  ini_file:
    path: "{{ checksum_file }}"
    section: "{{ item.name }}"
    option: checksum
    value: "{{ config_checksums[item.name] }}"
    mode: '0644'
  loop: "{{ configs }}"

- name: Replace config names in Docker Compose file
  replace:
    path: "{{ docker_compose_path }}"
    regexp: "{{ item.name }}(_[a-f0-9]{32})?"
    replace: "{{ item.name }}_{{ config_checksums[item.name] }}"
  loop: "{{ configs }}"
